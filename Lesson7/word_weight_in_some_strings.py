"""
    1. Дан текст состоящий из нескольких строк. Выведите слово, которое в этом
    тексте встречается чаще всего. Если таких слов несколько, выведите последнее.
    Задачу необходимо решить с использованием словаря.

    Данная задача - частный случай предыдущей. Так как input() в Python не позволяет получить
    от пользователя многострочный ввод, то позволю себе забежать немного вперед и использовать
    чтение многострочного текста из файла.
"""
import os

text_file = 'multilinetext.txt'

with open(text_file, encoding='utf8') as file:
    some_strings = file.read()
file.close()

one_line_text = some_strings.replace('\n', ' ')
# Так как в строке могут быть знаки препинания, такие как точка, запятая, тире, вопросительный или восклицательный знаки
# то желательно перед разбиением на слова от них избавиться. В реальных ситуациях также необходимо поступить с кавычками
# и другими возможными знаками, которые не являются словами. Также для того чтоб избежать погрешности в подсчете, лучше
# все слова привести к единому регистру, например нижнему
clear_string = one_line_text.replace(',', '').replace('.', '').replace('-', '').replace('!', '').replace('?', ''). \
    replace('(', '').replace(')', '')
words = clear_string.lower().split()
my_dict = dict()

# Добавляем слова в наш словарь, где слова будут ключами, а значения будет количеством. При добавлении, если слово уже
# есть в словаре, увеличиваем value на единицу
for word in words:
    if word in my_dict:
        my_dict[word] += 1
    else:
        my_dict[word] = 1

# Выводим на печать наши слова и количество их в нашей строке
for item in my_dict:
    print(item, ':', my_dict[item], 'раз(a)')

# Сортируем слова по количеству вхождений от максимального к минимальному. Можно также подумать и отсортировать
# дополнительно по ключу. Прошу простить за использование лямбда функций для сортировки(Мы это пока не проходили)

sorted_dict = sorted(my_dict.items(), key=lambda dict_item: dict_item[1], reverse=True)

print(f'Слово: "{sorted_dict[0][0]}", встречается в тексте {sorted_dict[0][1]} раз(а)')
